// Combined word list with exactly 423 words (all 5 letters)
const wordList = [
  // First portion (0-99)
  'party',
  'house',
  'light',
  'happy',
  'smile',
  'laugh',
  'water',
  'table',
  'music',
  'phone',
  'chair',
  'cloud',
  'green',
  'white',
  'black',
  'paper',
  'clock',
  'pizza',
  'beach',
  'tiger',
  'sleep',
  'dream',
  'sunny',
  'money',
  'dance',
  'apple',
  'grape',
  'candy',
  'space',
  'heart',
  'round',
  'voice',
  'sweet',
  'earth',
  'magic',
  'print',
  'class',
  'learn',
  'paint',
  'movie',
  'story',
  'hotel',
  'funny',
  'guess',
  'plant',
  'radio',
  'frame',
  'storm',
  'fruit',
  'grass',
  'bread',
  'break',
  'count',
  'clean',
  'drink',
  'thank',
  'horse',
  'mouse',
  'prize',
  'steam',
  'river',
  'touch',
  'clear',
  'brick',
  'night',
  'great',
  'crowd',
  'child',
  'under',
  'above',
  'swing',
  'today',
  'front',
  'fresh',
  'lucky',
  'enjoy',
  'quick',
  'share',
  'track',
  'stuff',
  'train',
  'sport',
  'stage',
  'lunch',
  'coach',
  'catch',
  'super',
  'bring',
  'sight',
  'focus',
  'smart',
  'stand',
  'point',
  'drive',
  'power',
  'place',

  // Second portion (100-199)
  'level',
  'force',
  'style',
  'proud',
  'color',
  'sense',
  'whole',
  'small',
  'sound',
  'shape',
  'field',
  'quiet',
  'ocean',
  'model',
  'guide',
  'young',
  'close',
  'agree',
  'shine',
  'cover',
  'state',
  'build',
  'slide',
  'taste',
  'floor',
  'value',
  'trust',
  'score',
  'watch',
  'royal',
  'climb',
  'block',
  'store',
  'start',
  'plain',
  'glass',
  'early',
  'speak',
  'price',
  'spend',
  'large',
  'claim',
  'begin',
  'trade',
  'ready',
  'tower',
  'heavy',
  'dress',
  'world',
  'rough',
  'right',
  'think',
  'video',
  'coast',
  'metal',
  'bloom',
  'flame',
  'crash',
  'ghost',
  'quest',
  'pride',
  'snake',
  'sharp',
  'shock',
  'craft',
  'peace',
  'shift',
  'smoke',
  'waste',
  'shell',
  'grace',
  'fault',
  'judge',
  'cabin',
  'pitch',
  'wound',
  'brain',
  'charm',
  'grave',
  'brush',
  'enemy',
  'truck',
  'trail',
  'scene',
  'doubt',
  'glory',
  'spark',
  'feast',
  'wheel',
  'chest',
  'slant',
  'grant',
  'blank',
  'patch',
  'solid',
  'event',

  // Third portion (200-299)
  'twist',
  'noise',
  'staff',
  'angle',
  'scale',
  'sweat',
  'mercy',
  'cheer',
  'thumb',
  'blend',
  'giant',
  'march',
  'logic',
  'agent',
  'honor',
  'dozen',
  'chase',
  'guest',
  'worth',
  'brave',
  'range',
  'cloth',
  'blade',
  'ridge',
  'flock',
  'ideal',
  'nerve',
  'slope',
  'orbit',
  'youth',
  'fluid',
  'actor',
  'swift',
  'proof',
  'pilot',
  'boost',
  'phase',
  'fleet',
  'humor',
  'theme',
  'pearl',
  'major',
  'chief',
  'reach',
  'bound',
  'spare',
  'local',
  'album',
  'await',
  'rebel',
  'noble',
  'crown',
  'flood',
  'creep',
  'blast',
  'rival',
  'title',
  'image',
  'pause',
  'toast',
  'eager',
  'drift',
  'grove',
  'tough',
  'realm',
  'curve',
  'verse',
  'squad',
  'faith',
  'motor',
  'depth',
  'grand',
  'split',
  'union',
  'yield',
  'plead',
  'tense',
  'weave',
  'adult',
  'layer',
  'solve',
  'grasp',
  'alarm',
  'flush',
  'shade',
  'thick',
  'trace',
  'gloom',
  'drill',
  'pound',
  'ditch',
  'serve',
  'guard',
  'rogue',
  'crest',
  'adapt',

  // Fourth portion (300-399)
  'agile',
  'quota',
  'axiom',
  'azure',
  'badge',
  'banal',
  'baton',
  'berth',
  'bicep',
  'blimp',
  'brine',
  'brisk',
  'cacao',
  'cairn',
  'civic',
  'clamp',
  'clasp',
  'derby',
  'dwell',
  'edify',
  'eerie',
  'elegy',
  'elide',
  'ethic',
  'expel',
  'feral',
  'fiend',
  'fjord',
  'flare',
  'flora',
  'flume',
  'folly',
  'forge',
  'frond',
  'fungi',
  'fusty',
  'gamut',
  'gaunt',
  'gavel',
  'girth',
  'gleam',
  'glint',
  'gnome',
  'gourd',
  'guise',
  'gusto',
  'haunt',
  'heist',
  'helix',
  'hippo',
  'hyper',
  'idiom',
  'iliac',
  'irate',
  'joust',
  'kiosk',
  'knoll',
  'lumen',
  'lurch',
  'maxim',
  'mirth',
  'mogul',
  'mourn',
  'nadir',
  'niche',
  'octal',
  'ombre',
  'opine',
  'oxide',
  'parse',
  'perch',
  'pique',
  'pixel',
  'polyp',
  'prism',
  'prose',
  'prowl',
  'quill',
  'quilt',
  'quirk',
  'rebut',
  'relic',
  'rigor',
  'satyr',
  'scion',
  'segue',
  'serif',
  'shale',
  'strut',
  'suave',
  'synod',
  'tenet',
  'tepid',
  'thrum',
  'tithe',
  'torso',

  // Final portion (400-422)
  'trawl',
  'triad',
  'trope',
  'tunic',
  'umbra',
  'usurp',
  'valor',
  'vault',
  'verge',
  'verve',
  'vinyl',
  'vista',
  'vocal',
  'vouch',
  'whelp',
  'wrest',
  'zesty',
  'zonal',
  'about',
  'delay',
  'index',
  'acute',
  'amend',
  'bacon',
  'spasm',
  'wreck',
  'shack',
  'globe',
  'donut',
  'donor',
  'feint',
  'decor',
  'dodge',
  'gloat',
  'fable',
  'fever',
  'snack',
];

/**
 * Gets today's word based on the current date.
 * If the calculated index exceeds 423, it wraps around to 0
 * and can go up to 238.
 *
 * @returns {string} Today's word
 */

export function getTodaysWord() {
  // Get a consistent seed based on today's date
  const today = new Date();
  const seed =
    today.getFullYear() * 10000 +
    (today.getMonth() + 1) * 100 +
    today.getDate();

  // Calculate the index, handling the wraparound logic
  let index = seed % 662; // Total range (423 + 239 = 662)

  // If index is greater than 423, wrap around to 0 and count up to 238
  if (index >= 423) {
    index = index - 423;
    // Ensure it doesn't go beyond 238
    if (index > 238) {
      index = index % 239; // 0 to 238 inclusive
    }
  }

  return wordList[index];
}

const WinMessages = {
  0: [
    ' Did you cheat?! First try genius!🤯',
    ' Psychic confirmed. First guess!🔮',
    ' Bullseye! Right out of the gate! 🎯',
    ' You must be a wizard!🪄',
    'How did you know?!🤨',
  ],
  1: [
    "Smokin' hot guess!🔥",
    'Big brain energy!',
    "Second try? You're built different ⚡",
    'Zooming through that word! 🚀 ',
    'Too cool to guess wrong 😎',
  ],
  2: [
    'Bronze medalist in word magic!🥉',
    '👀 You’re really getting the hang of this!',
    'Pulling answers out of thin air? 🎩',
    'Are you secretly an AI? 🤖',
    ' Dictionary vibes, huh? 📚',
  ],
  3: [
    'A little shaky 😅, but you made it!',
    'Detective mode: activated!🔍',
    'Puzzle solved like a pro!🧩 ',
    '🎲 That guess was risky... but it worked!',
  ],
  4: [
    'Phew 😮‍💨, that was close!',
    'That was almost a disaster!😱',
    'Performance under pressure! 📉 ',
    "Hey, a win's a win!. Well done 👏",
  ],
  5: [
    'You were one guess away from doom!🥶',
    'That was too close!😮‍💨',
    'Slow and steady wins... barely 🐢 ',
    'Thought you’d lost, didn’t you? 💀 ',
    'Luck + skill combo! 🪄 ',
  ],
  6: [
    'You were one guess away from doom!🥶',
    'That was too close!😮‍💨',
    'Slow and steady wins... barely 🐢 ',
    'Thought you’d lost, didn’t you? 💀 ',
    'Luck + skill combo! 🪄 ',
  ],
};

export const getToast = (currentLine: number) => {
  const options = WinMessages[currentLine as keyof typeof WinMessages];
  const randomIndex = Math.floor(Math.random() * options.length);
  return options[randomIndex];
};

export const getFailMessage = () => {
  const failMessages = [
    `So close...😵‍💫 yet so far`,
    `The word beat you this time. Come back stronger!`,
    `Oof 🫠 that one slipped through.`,
    `Tragic ending!. New day, new game!`,
    `Got ya 🤪". You'll get it next time!`,
    `It happens 🫥 . Don’t give up!`,
    `That one was brutal 🥶. New day, new chance!`,
    `What a ride 🎢... and a crash. Let's roll again tomorrow!`,
    `That’s a wrap. You’ll crack it next time!`,
    `Slow and steady 🐌 didn’t win today.`,
    `Ouch. Today’s stats took a hit 📉 . Tomorrow’s a new chart!`,
  ];

  const randomIndex = Math.floor(Math.random() * failMessages.length);
  return failMessages[randomIndex];
};

export const endingMessage =
  "You have completed today's challenge come back tomorrow";

export const FirstTimeReward = 10; //coins
export const StreakBonus = 5;
export const DailyBonus = 5;
